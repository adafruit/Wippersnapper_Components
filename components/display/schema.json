{
    "title": "Display Component Definition",
    "description": "A Display WipperSnapper component type for use in Adafruit IO",
    "type": "object",
    "required": [
        "displayName",
        "vendor"
    ],
    "additionalProperties": false,
    "properties": {
        "displayName": {
            "description": "The human-friendly name of this component.",
            "type": "string",
            "minLength": 3,
            "maxLength": 30
        },
        "published": {
            "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
            "type": "boolean"
        },
        "description": {
            "description": "A brief description describing this component's capabilities.",
            "type": "string",
            "minLength": 3,
            "maxLength": 255
        },
        "productURL": {
            "description": "Link to this component's homepage.",
            "type": "string",
            "format": "uri"
        },
        "documentationURL": {
            "description": "Link to this component's documentation.",
            "type": "string",
            "format": "uri"
        },
        "vendor": {
            "description": "Name of the company that makes this component.",
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "displayType": {
            "description": "Display configuration and type, maps to DisplayAddOrReplace",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "The type of display",
                    "type": "string",
                    "enum": [
                        "unspecified",
                        "oled",
                        "epd",
                        "tft"
                    ]
                },
                "spiEpd": {
                    "description": "Optional EPD SPI configuration.",
                    "type": "object",
                    "properties": {
                        "bus": {
                            "type": "integer"
                        }
                    }
                },
                "spiTft": {
                    "description": "Optional TFT SPI configuration.",
                    "type": "object",
                    "properties": {
                        "bus": {
                            "type": "integer"
                        }
                    }
                },
                "epdConfig": {
                    "description": "Optional EPD Configuration",
                    "type": "object",
                    "required": [
                        "mode"
                    ],
                    "properties": {
                        "mode": {
                            "type": "string",
                            "enum": [
                                "unspecified",
                                "grayscale4",
                                "mono"
                            ]
                        }
                    }
                },
                "tftConfig": {
                    "description": "Optional TFT Configuration",
                    "type": "object",
                    "required": [
                        "width",
                        "height",
                        "rotation"
                    ],
                    "properties": {
                        "width": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "height": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "rotation": {
                            "type": "integer",
                            "enum": [0, 1, 2, 3]
                        }
                    }
                }
            }
        }
    }
}