{
  "title": "I2C Component Definition",
  "description": "An I2C-based WipperSnapper component for use in Adafruit IO",
  "type": "object",
  "$defs": {
    "subcomponent": {
      "type": ["string", "object"],
      "pattern": "^(unspecified|accelerometer|magnetic-field|orientation|gyroscope|light|pressure|proximity|gravity|acceleration|rotation|humidity|ambient-temp|object-temp|voltage|current|color|raw|pm10-std|pm25-std|pm100-std|pm10-env|pm25-env|pm100-env|co2|gas-resistance|altitude|lux|eco2|unitless-percent|ambient-temp-fahrenheit|object-temp-fahrenheit|voc-index|nox-index|tvoc)$",
      "required": [ "displayName", "sensorType" ],
      "additionalProperties": false,
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this sensor.",
          "type": "string",
          "minLength": 3,
          "maxLength": 30
        },
        "type": {
          "description": "A unique string used to look up this sensor's definition, and its parent component's definition.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "sensorType": {
          "description": "One of the supported I2C sensor type strings (found in README).",
          "type": "string",
          "pattern": "^(unspecified|accelerometer|magnetic-field|orientation|gyroscope|light|pressure|proximity|gravity|acceleration|rotation|humidity|ambient-temp|object-temp|voltage|current|color|raw|pm10-std|pm25-std|pm100-std|pm10-env|pm25-env|pm100-env|co2|gas-resistance|altitude|lux|eco2|unitless-percent|ambient-temp-fahrenheit|object-temp-fahrenheit|voc-index|nox-index|tvoc)$"
        },
        "defaultPeriod": {
          "description": "What period to the form should default to for this sensor.",
          "type": "number",
          "minimum": 1,
          "maximum": 86400
        }
      }
    }
  },
  "required": [ "displayName", "vendor", "i2cAddresses", "subcomponents" ],
  "additionalProperties": false,
  "properties": {
    "displayName": {
      "description": "The human-friendly name of this component.",
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "published": {
      "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
      "type": "boolean"
    },
    "description": {
      "description": "A brief description describing this component's capabilities.",
      "type": "string",
      "minLength": 3,
      "maxLength": 255
    },
    "productURL": {
      "description": "Link to this component's homepage.",
      "type": "string",
      "format": "uri"
    },
    "documentationURL": {
      "description": "Link to this component's documentation.",
      "type": "string",
      "format": "uri"
    },
    "vendor": {
      "description": "Name of the company that makes this component.",
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "i2cAddresses": {
      "description": "List of I2C addresses (as hex string, like \"0x38\") this component can appear on.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "subcomponents": {
      "description": "List of sensors on this I2C component.",
      "type": "array",
      "items": { "$ref": "#/$defs/subcomponent" }
    }
  }
}
